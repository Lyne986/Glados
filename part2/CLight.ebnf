(*
    Our EBNF grammar for our language Clight is as follows:
*)

<program> ::= <external-declaration>

<external-declaration> ::= <function-definition>
                          | <declaration>

<function-definition> ::= <type-specifiers> <declarator> <compound-statement>

<declarator> ::= <identifier> <parameter-list>

<parameter-list> ::= "(" <parameter-declaration-list> ")"
                   | "(" ")"

<parameter-declaration-list> ::= <parameter-declaration>
                               | <parameter-declaration> "," <parameter-declaration-list>

<parameter-declaration> ::= <type-specifiers> <identifier>

<compound-statement> ::= "{" <statement-list> "}"

<statement-list> ::= <statement>
                   | <statement> <statement-list>

<statement> ::= <expression-statement>
                | <declaration>
                | <if-statement>
                | <while-statement>

<if-statement> ::= "if" "(" <expression> ")" <statement>
                 | "if" "(" <expression> ")" <statement> "else" <statement>

<while-statement> ::= "while" "(" <expression> ")" <statement>

<expression-statement> ::= <expression> ";"

<expression> ::= <assignment-expression>

<assignment-expression> ::= <binary-expression>
                          | <identifier> "=" <assignment-expression>
                          | <function-call>

<binary-expression> ::= <number> <binary-operator> (<expression> | <number>)


<function-call> ::= <identifier> "(" <argument-list> ")"

<argument-list> ::=
                  | number
                  | identifier
                  | identifier "(" <argument-list> ")"

<binary-operator> ::= "+" | "-" | "*" | "/" | "%" | "==" | "!=" | "<" | ">" | "<=" | ">="

<declaration> ::= <type-specifiers> <identifier> ";"

<type-specifiers> ::= "int"

<identifier> ::= [a-zA-Z_][a-zA-Z0-9_]*

<number> ::= [0-9]+

